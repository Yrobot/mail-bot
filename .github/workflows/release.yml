name: Release

on:
  push:
    branches:
      - release

jobs:
  docker_release:
    # Docker Push Doc: https://docs.docker.com/engine/reference/commandline/push
    # Get Git Tag: https://github.com/orgs/community/discussions/26686
    name: Docker Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Get Next Release Version (dry run semantic-release)
        id: version
        run: |
          export NEXT_VERSION_TAG=$(npx semantic-release -b release --dry-run -p | grep 'The next release version is' | sed -E 's/.* ([[:digit:].]+)$/\1/')
          echo "version_tag=${NEXT_VERSION_TAG}" >> $GITHUB_OUTPUT
      - run: echo NEXT_VERSION_TAG=${{ steps.version.outputs.version_tag }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mail-bot:latest,${{ secrets.DOCKERHUB_USERNAME }}/mail-bot:${{ steps.version.outputs.version_tag }}

  github_release:
    name: Github Release
    needs: docker_release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Run semantic-release
        run: npx semantic-release -b release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          NPM_TOKEN: "00000000-0000-0000-0000-000000000000" # no need to publish npm, just escape the "@semantic-release/npm" step [verifyConditions]
          GIT_AUTHOR_NAME: "@release-bot"
          GIT_COMMITTER_NAME: "@release-bot"
          GIT_AUTHOR_EMAIL: "yrobot@yrobot.top"
          GIT_COMMITTER_EMAIL: "yrobot@yrobot.top"
      - name: Merge master -> release
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: master
          target_branch: release
          github_token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
